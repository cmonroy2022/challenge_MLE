name: 'Continuous Delivery'

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r requirements-test.txt
        pip install -r requirements-dev.txt
        
    - name: Run all tests before deployment
      run: |
        python -m pytest --cov-config=.coveragerc --cov-report term --cov-report html:reports/html --cov-report xml:reports/coverage.xml --junitxml=reports/junit.xml --cov=challenge tests/model
        python -m pytest --cov-config=.coveragerc --cov-report term --cov-report html:reports/html --cov-report xml:reports/coverage.xml --junitxml=reports/junit.xml --cov=challenge tests/api
        
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
        
    - name: Configure Docker for GCR
      run: gcloud auth configure-docker
      
    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/flight-delay-api:${{ github.sha }} .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/flight-delay-api:${{ github.sha }}
        
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy flight-delay-api \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/flight-delay-api:${{ github.sha }} \
          --region us-central1 \
          --platform managed \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 1 \
          --max-instances 10
          
    - name: Get service URL
      id: get-url
      run: |
        SERVICE_URL=$(gcloud run services describe flight-delay-api --region=us-central1 --format='value(status.url)')
        echo "service_url=$SERVICE_URL" >> $GITHUB_OUTPUT
        
    - name: Update Makefile with new URL
      run: |
        sed -i "s|STRESS_URL = .*|STRESS_URL = ${{ steps.get-url.outputs.service_url }}|" Makefile
        
    - name: Run stress tests
      run: |
        pip install locust
        python -m locust -f tests/stress/api_stress.py --print-stats --html reports/stress-test.html --run-time 60s --headless --users 100 --spawn-rate 1 -H ${{ steps.get-url.outputs.service_url }}
        
    - name: Upload stress test results
      uses: actions/upload-artifact@v4
      with:
        name: stress-test-results
        path: reports/stress-test.html
        
    - name: Notify deployment success
      if: success()
      run: |
        echo "✅ Deployment successful!"
        echo "🌐 Service URL: ${{ steps.get-url.outputs.service_url }}"
        echo "📊 Stress tests completed"
        
    - name: Notify deployment failure
      if: failure()
      run: |
        echo "❌ Deployment failed!"
        echo "Check the logs above for details" 
